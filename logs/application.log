2025-05-07 10:26:04.443 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 19419 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:26:04.444 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:26:04.445 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:26:04.466 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:26:05.033 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:26:05.909 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:05.909 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:26:05.970 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:26:05.971 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:26:05.977 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 63 ms. Found 2 JPA repository interfaces.
2025-05-07 10:26:05.977 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:05.978 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:26:05.979 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:26:05.979 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:26:05.980 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:26:05.980 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:26:06.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:26:06.131 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:26:06.132 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:26:06.132 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:26:06.132 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:26:06.134 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.134 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:26:06.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:26:06.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:26:06.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:26:06.140 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:26:06.162 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.163 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:26:06.167 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:26:06.167 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:26:06.167 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:26:06.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:26:06.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:26:06.170 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.170 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:26:06.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:26:06.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:26:06.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:26:06.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:26:06.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:26:06.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:26:06.194 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:26:06.194 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:26:06.194 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:26:06.195 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:26:06.195 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:26:06.215 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:26:06.215 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:26:06.221 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:26:06.222 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:26:06.222 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:26:06.222 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:26:06.222 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:26:06.510 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:26:06.516 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:26:06.517 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:26:06.517 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:26:06.539 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:26:06.539 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 861 ms
2025-05-07 10:26:06.826 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:26:06.840 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:26:06.926 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2093bb6c
2025-05-07 10:26:06.926 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:26:07.129 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:26:07.440 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:26:07.672 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@679f3e12, com.mongodb.Jep395RecordCodecProvider@5b285847, com.mongodb.KotlinCodecProvider@57af157c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:26:07.685 [32mINFO [m [[1;34mcluster-ClusterId{value='681b97af53400f163df2dc40', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15799917, minRoundTripTimeNanos=0}
2025-05-07 10:26:07.939 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:26:08.098 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:26:08.150 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:26:08.501 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:26:08.566 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:26:08.569 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:26:10.647 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:26:10.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:26:10.669 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:26:10.676 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:26:10.677 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:26:10.678 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:26:10.694 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:26:10.704 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=1b3ea9db): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=3441ee7f): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:27:57.452 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 20580 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:27:57.453 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:27:57.453 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:27:57.474 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:27:57.991 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:27:58.860 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:58.860 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:27:58.920 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:27:58.921 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:27:58.926 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 61 ms. Found 2 JPA repository interfaces.
2025-05-07 10:27:58.927 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:58.927 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:27:58.928 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:27:58.929 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:27:58.929 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:27:58.930 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:27:59.073 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.073 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:27:59.080 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:27:59.080 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:27:59.081 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:27:59.081 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:27:59.082 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.082 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:27:59.084 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:27:59.084 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:27:59.085 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:27:59.087 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:27:59.104 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.104 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:27:59.106 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:27:59.106 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:27:59.106 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:27:59.107 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:27:59.107 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:27:59.108 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.108 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:27:59.110 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:27:59.110 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:27:59.110 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:27:59.111 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:27:59.111 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:27:59.122 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.122 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:27:59.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:27:59.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:27:59.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:27:59.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:27:59.125 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:27:59.144 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:27:59.145 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:27:59.150 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:27:59.150 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:27:59.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:27:59.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:27:59.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:27:59.418 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:27:59.424 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:27:59.424 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:27:59.424 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:27:59.443 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:27:59.443 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 822 ms
2025-05-07 10:27:59.708 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:27:59.724 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:27:59.796 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@451a4187
2025-05-07 10:27:59.797 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:27:59.987 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:28:00.274 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:28:00.463 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f1d270a, com.mongodb.Jep395RecordCodecProvider@7d14efc, com.mongodb.KotlinCodecProvider@5180f430]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:28:00.470 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9820941919515ffcdf28', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9124458, minRoundTripTimeNanos=0}
2025-05-07 10:28:00.716 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:28:00.862 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:28:00.901 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:28:01.211 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:28:01.276 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:28:01.279 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:28:03.365 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:28:03.380 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:28:03.382 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:28:03.389 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:28:03.390 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:28:03.391 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:28:03.402 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:28:03.412 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=fe60d4c): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1004b8d2): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:28:44.643 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 21010 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:28:44.644 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:28:44.645 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:28:44.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:28:45.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:28:46.101 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.102 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:28:46.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:28:46.165 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:28:46.171 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
2025-05-07 10:28:46.172 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.172 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:28:46.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:46.174 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:46.174 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:46.175 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:28:46.332 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.332 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:28:46.339 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:46.339 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:46.340 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:46.340 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:28:46.343 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.343 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:28:46.345 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:46.346 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:46.346 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:46.348 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:28:46.368 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.368 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:28:46.370 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:46.371 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:46.371 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:46.371 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:46.371 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:28:46.373 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.373 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:28:46.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:46.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:46.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:46.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:46.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:28:46.386 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.386 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:28:46.388 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:46.388 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:46.388 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:46.388 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:46.389 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:28:46.408 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:46.408 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:28:46.414 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:46.414 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:46.414 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:46.414 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:46.415 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:28:46.758 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:28:46.765 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:28:46.766 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:28:46.766 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:28:46.786 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:28:46.786 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 938 ms
2025-05-07 10:28:47.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:28:47.114 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:28:47.197 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@758d0555
2025-05-07 10:28:47.198 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:28:47.413 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:28:47.704 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:28:47.896 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@122bfaac, com.mongodb.Jep395RecordCodecProvider@7ae3591b, com.mongodb.KotlinCodecProvider@67954d71]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:28:47.902 [32mINFO [m [[1;34mcluster-ClusterId{value='681b984f54aad77a321c9dc2', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8161458, minRoundTripTimeNanos=0}
2025-05-07 10:28:48.182 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:28:48.328 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:28:48.376 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:28:48.662 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:28:48.727 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:28:48.730 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:28:50.801 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:28:50.818 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:28:50.825 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:28:50.831 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:28:50.834 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:28:50.838 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:28:50.853 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:28:50.865 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7a1b9d82): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=263d5751): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:28:56.624 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 21145 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:28:56.625 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:28:56.626 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:28:56.645 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:28:57.132 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:28:57.998 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:57.998 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:28:58.055 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:28:58.056 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:28:58.061 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2025-05-07 10:28:58.062 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.062 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:28:58.064 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:58.064 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:58.064 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:28:58.065 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:28:58.200 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.201 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:28:58.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:58.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:58.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:28:58.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:28:58.209 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.209 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:28:58.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:58.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:58.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:28:58.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 1 Cassandra repository interface.
2025-05-07 10:28:58.230 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.230 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:28:58.233 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:58.233 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:58.233 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:58.233 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:28:58.233 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:28:58.235 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.235 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:28:58.237 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:58.237 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:58.237 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:58.237 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:28:58.237 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:28:58.248 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.248 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:28:58.250 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:58.250 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:58.250 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:58.251 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:28:58.251 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:28:58.269 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:28:58.270 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:28:58.275 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:58.275 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:58.275 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:58.275 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:28:58.275 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:28:58.530 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:28:58.536 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:28:58.536 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:28:58.536 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:28:58.555 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:28:58.555 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 785 ms
2025-05-07 10:28:58.785 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:28:58.799 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:28:58.870 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@758d0555
2025-05-07 10:28:58.870 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:28:59.046 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:28:59.316 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:28:59.500 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@43815bc, com.mongodb.Jep395RecordCodecProvider@122bfaac, com.mongodb.KotlinCodecProvider@7ae3591b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:28:59.511 [32mINFO [m [[1;34mcluster-ClusterId{value='681b985b3366a2614165fa8c', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9404583, minRoundTripTimeNanos=0}
2025-05-07 10:28:59.745 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:28:59.884 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:28:59.924 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:29:00.192 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:29:00.255 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:29:00.258 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:29:02.326 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:29:02.344 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:29:02.347 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:29:02.355 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:29:02.357 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:29:02.358 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:29:02.369 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:29:02.377 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7c974bce): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=32244fc0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:30:36.091 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 22164 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:30:36.093 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:30:36.093 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:30:36.114 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:30:36.634 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:30:37.527 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.527 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:30:37.587 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:30:37.588 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:30:37.593 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 61 ms. Found 2 JPA repository interfaces.
2025-05-07 10:30:37.594 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.594 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:30:37.596 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:30:37.596 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:30:37.596 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:30:37.597 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:30:37.730 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.731 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:30:37.736 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:30:37.737 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:30:37.737 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:30:37.737 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:30:37.739 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.739 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:30:37.741 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:30:37.741 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:30:37.741 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:30:37.744 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 1 Cassandra repository interface.
2025-05-07 10:30:37.760 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.761 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:30:37.763 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:30:37.763 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:30:37.763 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:30:37.764 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:30:37.764 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:30:37.765 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.766 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:30:37.768 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:30:37.769 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:30:37.769 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:30:37.769 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:30:37.769 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:30:37.784 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.784 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:30:37.786 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:30:37.786 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:30:37.786 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:30:37.786 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:30:37.787 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:30:37.805 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:30:37.806 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:30:37.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:30:37.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:30:37.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:30:37.812 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:30:37.812 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:30:38.074 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:30:38.080 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:30:38.081 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:30:38.081 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:30:38.102 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:30:38.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 819 ms
2025-05-07 10:30:38.387 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:30:38.401 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:30:38.467 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7ae6927
2025-05-07 10:30:38.468 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:30:38.649 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:30:38.922 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:30:39.111 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@569d7074, com.mongodb.Jep395RecordCodecProvider@3726fc3b, com.mongodb.KotlinCodecProvider@33e6176b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:30:39.118 [32mINFO [m [[1;34mcluster-ClusterId{value='681b98bf2937a277518d4a85', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10730583, minRoundTripTimeNanos=0}
2025-05-07 10:30:39.355 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:30:39.363 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:30:39.364 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:30:39.368 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:30:39.369 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:30:39.369 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:30:39.376 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:30:39.384 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.d.LoggingFailureAnalysisReporter[m: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.learning.connector.service.TransactionHistoryServiceImpl required a bean named 'cassandraTemplate' that could not be found.


Action:

Consider defining a bean named 'cassandraTemplate' in your configuration.

2025-05-07 10:31:48.477 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 22908 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:31:48.478 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:31:48.478 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:31:48.508 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:31:49.032 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:31:49.902 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:49.902 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:31:49.965 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:31:49.966 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:31:49.972 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
2025-05-07 10:31:49.973 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:49.973 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:31:49.974 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:31:49.975 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:31:49.975 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:31:49.976 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:31:50.129 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.129 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:31:50.136 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:31:50.136 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:31:50.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:31:50.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:31:50.139 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.139 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:31:50.141 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:31:50.141 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:31:50.141 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:31:50.144 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:31:50.161 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.161 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:31:50.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:31:50.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:31:50.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:31:50.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:31:50.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:31:50.166 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.166 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:31:50.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:31:50.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:31:50.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:31:50.168 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:31:50.169 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:31:50.180 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.180 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:31:50.182 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:31:50.182 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:31:50.182 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:31:50.182 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:31:50.182 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:31:50.200 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:31:50.201 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:31:50.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:31:50.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:31:50.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:31:50.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:31:50.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:31:50.474 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:31:50.480 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:31:50.481 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:31:50.481 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:31:50.500 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:31:50.500 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 842 ms
2025-05-07 10:31:50.762 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:31:50.777 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:31:50.847 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@450f0d89
2025-05-07 10:31:50.847 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:31:51.033 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:31:51.398 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:31:51.614 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@a824f87, com.mongodb.Jep395RecordCodecProvider@6789b471, com.mongodb.KotlinCodecProvider@1eb3a6a3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:31:51.620 [32mINFO [m [[1;34mcluster-ClusterId{value='681b99077d0d587fbe4c4aaa', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8913750, minRoundTripTimeNanos=0}
2025-05-07 10:31:51.869 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:31:52.015 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:31:52.052 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:31:52.332 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:31:52.398 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:31:52.401 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:31:54.476 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:31:54.491 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:31:54.493 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:31:54.500 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:31:54.502 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:31:54.502 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:31:54.513 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:31:54.522 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=a9837f3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=290c7c36): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:33:21.573 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 23847 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:33:21.575 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:33:21.575 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:33:21.595 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:33:22.121 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:33:22.975 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:22.975 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:33:23.039 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:33:23.040 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:33:23.045 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
2025-05-07 10:33:23.046 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.046 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:33:23.048 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:33:23.048 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:33:23.049 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:33:23.049 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:33:23.200 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.201 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:33:23.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:33:23.208 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:33:23.208 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:33:23.209 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:33:23.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:33:23.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:33:23.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:33:23.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:33:23.215 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:33:23.238 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.239 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:33:23.241 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:33:23.242 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:33:23.242 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:33:23.242 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:33:23.242 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:33:23.244 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.244 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:33:23.246 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:33:23.246 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:33:23.246 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:33:23.246 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:33:23.246 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:33:23.257 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.258 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:33:23.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:33:23.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:33:23.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:33:23.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:33:23.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:33:23.280 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:33:23.280 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:33:23.286 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:33:23.286 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:33:23.286 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:33:23.286 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:33:23.286 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:33:23.566 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:33:23.572 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:33:23.573 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:33:23.573 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:33:23.593 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:33:23.593 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 849 ms
2025-05-07 10:33:23.877 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:33:23.892 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:33:23.967 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c215642
2025-05-07 10:33:23.968 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:33:24.163 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:33:24.440 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:33:24.624 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4d7a4317, com.mongodb.Jep395RecordCodecProvider@5f1d270a, com.mongodb.KotlinCodecProvider@7d14efc]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:33:24.633 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9964313ada46b9923250', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10607709, minRoundTripTimeNanos=0}
2025-05-07 10:33:24.882 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:33:25.034 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:33:25.070 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:33:25.341 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:33:25.406 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:33:25.409 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:33:27.492 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:33:27.503 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:33:27.505 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:33:27.510 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:33:27.511 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:33:27.512 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:33:27.520 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:33:27.538 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=2610e8f8): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=5e41a00e): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:34:15.157 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 24377 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:34:15.159 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:34:15.160 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:34:15.193 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:34:15.736 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:34:16.615 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.616 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:34:16.677 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:34:16.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:34:16.683 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2025-05-07 10:34:16.684 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.684 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:34:16.685 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:16.686 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:16.686 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:16.687 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:34:16.831 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.831 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:34:16.837 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:16.838 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:16.838 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:16.838 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:34:16.840 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.840 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:34:16.842 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:16.842 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:16.842 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:16.844 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 1 Cassandra repository interface.
2025-05-07 10:34:16.861 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.861 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:34:16.863 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:16.863 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:16.863 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:16.863 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:16.864 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:34:16.865 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.865 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:34:16.867 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:16.867 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:16.867 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:16.867 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:16.867 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:34:16.878 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.878 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:34:16.880 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:16.880 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:16.880 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:16.880 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:16.880 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:34:16.898 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:16.899 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:34:16.904 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:16.904 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:16.904 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:16.904 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:16.904 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:34:17.164 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:34:17.171 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:34:17.171 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:34:17.171 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:34:17.191 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:34:17.191 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 805 ms
2025-05-07 10:34:17.463 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:34:17.478 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:34:17.540 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ee186f3
2025-05-07 10:34:17.541 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:34:17.738 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:34:18.011 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:34:18.222 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49c3487f, com.mongodb.Jep395RecordCodecProvider@1e6a8d01, com.mongodb.KotlinCodecProvider@63c07eaf]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:34:18.230 [32mINFO [m [[1;34mcluster-ClusterId{value='681b999aac479a7c9d3498e8', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10904042, minRoundTripTimeNanos=0}
2025-05-07 10:34:18.471 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:34:18.618 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:34:18.654 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:34:18.926 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:34:18.991 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:34:18.994 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:34:21.068 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:34:21.086 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:34:21.088 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:34:21.096 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:34:21.098 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:34:21.099 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:34:21.110 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:34:21.119 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=21133602): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=373453df): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:34:50.398 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 24810 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:34:50.400 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:34:50.400 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:34:50.421 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:34:50.977 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:34:51.849 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:51.849 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:34:51.911 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:34:51.912 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:34:51.918 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 63 ms. Found 2 JPA repository interfaces.
2025-05-07 10:34:51.918 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:51.918 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:34:51.920 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:51.920 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:51.920 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:34:51.921 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:34:52.065 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.065 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:34:52.072 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:52.072 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:52.072 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:34:52.073 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:34:52.074 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.074 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:34:52.076 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:52.077 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:52.077 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:34:52.079 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:34:52.096 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.097 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:34:52.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:52.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:52.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:52.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:34:52.099 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:34:52.101 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.101 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:34:52.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:52.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:52.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:52.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:34:52.103 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:34:52.114 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.115 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:34:52.117 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:52.117 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:52.117 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:52.117 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:34:52.117 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:34:52.140 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:34:52.140 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:34:52.150 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:52.150 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:52.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:52.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:34:52.151 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-05-07 10:34:52.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:34:52.441 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:34:52.441 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:34:52.441 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:34:52.461 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:34:52.462 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 846 ms
2025-05-07 10:34:52.735 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:34:52.750 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:34:52.829 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@638d624a
2025-05-07 10:34:52.831 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:34:53.018 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:34:53.317 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:34:53.573 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3e49adfa, com.mongodb.Jep395RecordCodecProvider@2296926d, com.mongodb.KotlinCodecProvider@10ef09e3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:34:53.583 [32mINFO [m [[1;34mcluster-ClusterId{value='681b99bd3aa820493c1b2066', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13027250, minRoundTripTimeNanos=0}
2025-05-07 10:34:53.839 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:34:53.980 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:34:54.020 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:34:54.282 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:34:54.352 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:34:54.355 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:34:56.444 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:34:56.460 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:34:56.461 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:34:56.466 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:34:56.467 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:34:56.467 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:34:56.475 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:34:56.500 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=7763e1a3): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5713aea9): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:40:49.693 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 3997 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:40:49.695 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:40:49.696 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:40:49.722 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:40:50.396 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:40:51.060 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.060 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:40:51.139 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:40:51.142 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:40:51.155 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 90 ms. Found 2 JPA repository interfaces.
2025-05-07 10:40:51.156 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.156 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:40:51.158 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:40:51.158 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:40:51.159 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:40:51.160 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:40:51.337 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.338 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:40:51.345 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:40:51.346 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:40:51.346 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:40:51.346 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:40:51.349 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.349 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:40:51.353 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:40:51.353 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:40:51.353 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:40:51.357 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 1 Cassandra repository interface.
2025-05-07 10:40:51.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.376 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:40:51.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:40:51.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:40:51.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:40:51.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:40:51.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:40:51.380 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.380 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:40:51.382 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:40:51.382 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:40:51.382 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:40:51.383 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:40:51.383 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:40:51.395 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.396 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:40:51.401 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:40:51.402 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:40:51.402 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:40:51.402 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:40:51.403 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:40:51.437 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:40:51.438 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:40:51.446 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:40:51.446 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:40:51.446 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:40:51.446 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:40:51.446 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:40:51.733 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:40:51.758 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 939 ms
2025-05-07 10:40:52.082 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:43:13.283 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 5497 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:43:13.285 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:43:13.285 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:43:13.308 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:43:13.847 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:43:14.522 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.522 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:43:14.584 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:43:14.585 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:43:14.590 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 63 ms. Found 2 JPA repository interfaces.
2025-05-07 10:43:14.591 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.591 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:43:14.592 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:43:14.593 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:43:14.593 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:43:14.594 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:43:14.736 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.737 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:43:14.743 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:43:14.743 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:43:14.744 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:43:14.744 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:43:14.746 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.746 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:43:14.748 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:43:14.748 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:43:14.748 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:43:14.750 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 1 Cassandra repository interface.
2025-05-07 10:43:14.767 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.768 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:43:14.770 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:43:14.770 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:43:14.770 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:43:14.770 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:43:14.770 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:43:14.772 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.772 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:43:14.774 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:43:14.774 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:43:14.774 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:43:14.774 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:43:14.774 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:43:14.785 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.785 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:43:14.787 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:43:14.787 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:43:14.787 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:43:14.787 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:43:14.788 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:43:14.805 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:43:14.806 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:43:14.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:43:14.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:43:14.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:43:14.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:43:14.811 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:43:15.076 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:43:15.082 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:43:15.083 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:43:15.083 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:43:15.101 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:43:15.101 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 812 ms
2025-05-07 10:43:15.365 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:43:15.382 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:43:15.472 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1317ac2c
2025-05-07 10:43:15.473 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:43:15.674 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:43:15.951 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:43:16.149 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@75452b01, com.mongodb.Jep395RecordCodecProvider@23b260ed, com.mongodb.KotlinCodecProvider@6d5b160]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:43:16.156 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9bb4aa0c890176ebb376', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9305500, minRoundTripTimeNanos=0}
2025-05-07 10:43:16.403 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:43:16.539 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:43:16.586 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:43:17.019 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:43:17.086 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:43:17.088 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b), trying next node (ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException))
2025-05-07 10:43:19.164 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:43:19.181 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:43:19.183 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:43:19.191 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:43:19.192 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:43:19.193 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:43:19.203 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:43:19.212 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=825369d): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)], Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=6599977b): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|connecting...] Protocol initialization request, step 1 (OPTIONS): failed to send request (io.netty.channel.StacklessClosedChannelException)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.writeListener(ChannelHandlerRequest.java:89)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:185)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:95)
		at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:30)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.send(ChannelHandlerRequest.java:78)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.send(ProtocolInitHandler.java:195)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler.onRealConnect(ProtocolInitHandler.java:126)
		at com.datastax.oss.driver.internal.core.channel.ConnectInitHandler.lambda$connect$0(ConnectInitHandler.java:59)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
		Suppressed: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:9042
		Caused by: java.net.ConnectException: Connection refused
			at java.base/sun.nio.ch.Net.pollConnect(Native Method)
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:673)
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
			at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: io.netty.channel.StacklessClosedChannelException
		at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0()(Unknown Source)
2025-05-07 10:46:42.847 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 1407 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:46:42.852 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:46:42.855 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:46:42.892 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:50:31.209 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 3967 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:50:31.211 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:50:31.211 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:50:31.232 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:50:31.740 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:50:32.412 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.412 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:50:32.472 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:50:32.473 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:50:32.479 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2025-05-07 10:50:32.480 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.480 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:50:32.482 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:50:32.482 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:50:32.482 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:50:32.483 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:50:32.627 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.628 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:50:32.634 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:50:32.635 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:50:32.635 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:50:32.635 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:50:32.637 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.637 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:50:32.639 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:50:32.639 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:50:32.639 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:50:32.642 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 3 ms. Found 1 Cassandra repository interface.
2025-05-07 10:50:32.659 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.659 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:50:32.661 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:50:32.661 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:50:32.662 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:50:32.662 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:50:32.662 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:50:32.664 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.664 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:50:32.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:50:32.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:50:32.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:50:32.666 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:50:32.667 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:50:32.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:50:32.680 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:50:32.680 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:50:32.680 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:50:32.681 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:50:32.681 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:50:32.700 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:50:32.701 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:50:32.707 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:50:32.707 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:50:32.707 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:50:32.707 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:50:32.707 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 10:50:32.990 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:50:32.995 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:50:32.996 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:50:32.996 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:50:33.014 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:50:33.014 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 837 ms
2025-05-07 10:50:33.342 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:50:33.356 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:50:33.452 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5516ee5
2025-05-07 10:50:33.453 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:50:33.668 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:50:33.971 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:50:34.176 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1e6a8d01, com.mongodb.Jep395RecordCodecProvider@63c07eaf, com.mongodb.KotlinCodecProvider@34b4c82a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:50:34.198 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9d6a896d685b4b2bad2e', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23102958, minRoundTripTimeNanos=0}
2025-05-07 10:50:34.452 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:50:34.593 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:50:34.632 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:50:35.090 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:50:35.160 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310), trying next node (ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel))
2025-05-07 10:50:35.163 [33mWARN [m [[1;34ms0-admin-1[m] [1;33mc.d.o.d.i.c.u.Loggers[m: [s0] Error connecting to Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0), trying next node (ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel))
2025-05-07 10:50:37.244 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:50:37.260 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:50:37.262 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:50:37.270 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:50:37.271 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:50:37.273 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:50:37.288 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:50:37.299 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.AllNodesFailedException: Could not reach any contact point, make sure you've provided valid addresses (showing first 2 nodes, use getAllErrors() for more): Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=245f4310): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)], Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=15f717e0): [com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)]
	at com.datastax.oss.driver.api.core.AllNodesFailedException.copy(AllNodesFailedException.java:143)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xdca4dd36, L:/[0:0:0:0:0:0:0:1]:50422 - R:localhost/[0:0:0:0:0:0:0:1]:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.onFailure(ChannelHandlerRequest.java:106)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.fail(InFlightHandler.java:383)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.abortAllInFlight(InFlightHandler.java:373)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.abortAllInFlight(InFlightHandler.java:355)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.exceptionCaught(InFlightHandler.java:301)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1324)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:856)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.handleReadException(AbstractNioByteChannel.java:125)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:177)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel
	Caused by: java.net.SocketException: Connection reset
		at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
		at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
		at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
		at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
		at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
	Suppressed: com.datastax.oss.driver.api.core.connection.ConnectionInitException: [s0|control|id: 0xbc2d94be, L:/127.0.0.1:50423 - R:localhost/127.0.0.1:9042] Protocol initialization request, step 1 (OPTIONS): unexpected failure (com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel)
		at com.datastax.oss.driver.internal.core.channel.ProtocolInitHandler$InitRequest.fail(ProtocolInitHandler.java:358)
		at com.datastax.oss.driver.internal.core.channel.ChannelHandlerRequest.onFailure(ChannelHandlerRequest.java:106)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.fail(InFlightHandler.java:383)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.abortAllInFlight(InFlightHandler.java:373)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.abortAllInFlight(InFlightHandler.java:355)
		at com.datastax.oss.driver.internal.core.channel.InFlightHandler.exceptionCaught(InFlightHandler.java:301)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1324)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:856)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.handleReadException(AbstractNioByteChannel.java:125)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:177)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
	Caused by: com.datastax.oss.driver.api.core.connection.ClosedConnectionException: Unexpected error on channel
	Caused by: java.net.SocketException: Connection reset
		at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
		at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
		at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
		at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
		at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1623)
2025-05-07 10:51:46.083 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 4730 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:51:46.084 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:51:46.085 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:51:46.108 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:51:46.657 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:51:47.397 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.397 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:51:47.474 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:51:47.475 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:51:47.481 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 76 ms. Found 2 JPA repository interfaces.
2025-05-07 10:51:47.481 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.481 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:51:47.483 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:51:47.483 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:51:47.483 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:51:47.484 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:51:47.639 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.639 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:51:47.647 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:51:47.647 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:51:47.648 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:51:47.649 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:51:47.650 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.651 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:51:47.653 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:51:47.653 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:51:47.654 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:51:47.657 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 5 ms. Found 1 Cassandra repository interface.
2025-05-07 10:51:47.675 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.676 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:51:47.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:51:47.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:51:47.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:51:47.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:51:47.678 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:51:47.680 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.681 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:51:47.683 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:51:47.683 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:51:47.683 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:51:47.684 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:51:47.684 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:51:47.697 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.697 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:51:47.699 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:51:47.699 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:51:47.699 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:51:47.700 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:51:47.700 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:51:47.717 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:51:47.718 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:51:47.723 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:51:47.723 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:51:47.723 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:51:47.724 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:51:47.724 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:51:47.998 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:51:48.003 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:51:48.004 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:51:48.004 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:51:48.033 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:51:48.033 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 951 ms
2025-05-07 10:51:48.372 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:51:48.386 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:51:48.468 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e0327dd
2025-05-07 10:51:48.468 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:51:48.684 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:51:49.075 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:51:49.323 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@77035caa, com.mongodb.Jep395RecordCodecProvider@18ac2dfe, com.mongodb.KotlinCodecProvider@761d679f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:51:49.333 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9db5f7526342d78bfebd', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13004458, minRoundTripTimeNanos=0}
2025-05-07 10:51:49.602 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:51:49.771 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:51:49.811 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:51:50.175 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:51:50.665 [33mWARN [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.l.h.OptionalLocalDcHelper[m: [s0|default] You specified datacenter1 as the local DC, but some contact points are from a different DC: Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:9042, hostId=null, hashCode=5652fbf3)=null; please provide the correct local DC, or check your contact points
2025-05-07 10:51:52.784 [33mWARN [m [[1;34mmain[m] [1;33mo.s.c.s.AbstractApplicationContext[m: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
2025-05-07 10:51:52.806 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:51:52.810 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 10:51:52.819 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 10:51:52.821 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 10:51:52.823 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Stopping service [Tomcat]
2025-05-07 10:51:52.843 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.a.l.ConditionEvaluationReportLogger[m: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-07 10:51:52.854 [1;31mERROR[m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryServiceImpl' defined in file [/Users/vickyaa/Downloads/learning0418-master/target/classes/com/learning/connector/service/TransactionHistoryServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.learning.connector.SpringDataJpaApplication.main(SpringDataJpaApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionHistoryRepository' defined in com.learning.connector.repository.TransactionHistoryRepository defined in @EnableCassandraRepositories declared on CassandraRepositoriesRegistrar.EnableCassandraRepositoriesConfiguration: Cannot resolve reference to bean 'cassandraTemplate' while setting bean property 'cassandraTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cassandraTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cassandraTemplate' parameter 0: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Invalid keyspace banking_keyspace
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSessionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Invalid keyspace banking_keyspace
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 44 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cassandraSession' defined in class path resource [org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.class]: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Invalid keyspace banking_keyspace
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$LazyDependencyTargetSource.getTarget(ContextAnnotationAutowireCandidateResolver.java:141)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:203)
	at jdk.proxy2/jdk.proxy2.$Proxy176.getContext(Unknown Source)
	at org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration.lambda$cassandraConverter$0(CassandraDataAutoConfiguration.java:100)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.cassandra.core.convert.MappingCassandraConverter.getCodecRegistry(MappingCassandraConverter.java:276)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.getCodecRegistry(DefaultColumnTypeResolver.java:485)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.tryResolve(DefaultColumnTypeResolver.java:244)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.createCassandraTypeDescriptor(DefaultColumnTypeResolver.java:466)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.lambda$resolve$1(DefaultColumnTypeResolver.java:225)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:224)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.doResolve(DefaultColumnTypeResolver.java:170)
	at org.springframework.data.cassandra.core.convert.DefaultColumnTypeResolver.resolve(DefaultColumnTypeResolver.java:111)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getDataType(SchemaFactory.java:197)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:173)
	at org.springframework.data.cassandra.core.convert.SchemaFactory.getCreateTableSpecificationFor(SchemaFactory.java:125)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.lambda$createTableSpecifications$1(CassandraPersistentEntitySchemaCreator.java:112)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.concurrent.ConcurrentHashMap$KeySpliterator.forEachRemaining(ConcurrentHashMap.java:3573)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTableSpecifications(CassandraPersistentEntitySchemaCreator.java:114)
	at org.springframework.data.cassandra.core.CassandraPersistentEntitySchemaCreator.createTables(CassandraPersistentEntitySchemaCreator.java:97)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaActions(SessionFactoryFactoryBean.java:267)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.createTables(SessionFactoryFactoryBean.java:238)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.performSchemaAction(SessionFactoryFactoryBean.java:224)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.lambda$afterPropertiesSet$0(SessionFactoryFactoryBean.java:157)
	at org.springframework.data.cassandra.config.SchemaUtils.withAsyncSchemaRefresh(SchemaUtils.java:96)
	at org.springframework.data.cassandra.config.SchemaUtils.withSchemaRefresh(SchemaUtils.java:84)
	at org.springframework.data.cassandra.config.SessionFactoryFactoryBean.afterPropertiesSet(SessionFactoryFactoryBean.java:163)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 55 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.datastax.oss.driver.api.core.CqlSession]: Factory method 'cassandraSession' threw exception with message: Invalid keyspace banking_keyspace
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 103 more
Caused by: com.datastax.oss.driver.api.core.InvalidKeyspaceException: Invalid keyspace banking_keyspace
	at com.datastax.oss.driver.api.core.InvalidKeyspaceException.copy(InvalidKeyspaceException.java:36)
	at com.datastax.oss.driver.internal.core.util.concurrent.CompletableFutures.getUninterruptibly(CompletableFutures.java:151)
	at com.datastax.oss.driver.api.core.session.SessionBuilder.build(SessionBuilder.java:837)
	at org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration.cassandraSession(CassandraAutoConfiguration.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 106 more
2025-05-07 10:52:40.812 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 5281 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 10:52:40.814 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 10:52:40.814 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 10:52:40.834 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 10:52:41.403 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 10:52:42.139 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.139 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 10:52:42.198 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:52:42.199 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 10:52:42.205 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 60 ms. Found 2 JPA repository interfaces.
2025-05-07 10:52:42.205 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.206 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 10:52:42.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:52:42.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:52:42.208 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 10:52:42.208 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 10:52:42.353 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.354 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 10:52:42.361 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:52:42.361 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:52:42.362 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 10:52:42.362 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 10:52:42.364 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.364 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 10:52:42.366 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:52:42.366 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:52:42.367 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 10:52:42.369 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 10:52:42.387 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.387 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:52:42.389 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:52:42.389 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:52:42.390 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:52:42.390 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 10:52:42.390 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 10:52:42.392 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.392 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 10:52:42.394 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:52:42.394 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:52:42.394 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:52:42.394 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 10:52:42.394 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 10:52:42.405 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.405 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 10:52:42.407 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:52:42.407 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:52:42.408 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:52:42.408 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 10:52:42.408 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 10:52:42.426 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 10:52:42.427 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 10:52:42.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:52:42.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:52:42.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:52:42.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 10:52:42.433 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 10:52:42.714 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 10:52:42.719 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 10:52:42.720 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 10:52:42.720 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 10:52:42.739 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 10:52:42.739 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 902 ms
2025-05-07 10:52:43.046 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 10:52:43.060 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 10:52:43.131 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49fb693d
2025-05-07 10:52:43.132 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 10:52:43.318 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 10:52:43.600 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 10:52:43.797 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1b6982e4, com.mongodb.Jep395RecordCodecProvider@316987c4, com.mongodb.KotlinCodecProvider@32eca9f4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 10:52:43.803 [32mINFO [m [[1;34mcluster-ClusterId{value='681b9debf18a9d1945c60e46', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9586417, minRoundTripTimeNanos=0}
2025-05-07 10:52:44.045 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 10:52:44.193 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 10:52:44.231 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 10:52:44.502 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 10:52:44.697 [33mWARN [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.l.h.OptionalLocalDcHelper[m: [s0|default] You specified datacenter1 as the local DC, but some contact points are from a different DC: Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=456f937b)=null; please provide the correct local DC, or check your contact points
2025-05-07 10:52:46.036 [33mWARN [m [[1;34mmain[m] [1;33mo.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration[m: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-07 10:52:46.534 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting ProtocolHandler ["http-nio-8080"]
2025-05-07 10:52:46.539 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat started on port 8080 (http) with context path '/'
2025-05-07 10:52:46.546 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Started SpringDataJpaApplication in 5.886 seconds (process running for 6.558)
2025-05-07 10:54:18.117 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 10:54:18.118 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Initializing Servlet 'dispatcherServlet'
2025-05-07 10:54:18.127 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Completed initialization in 9 ms
2025-05-07 10:54:18.167 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving all customer profiles
2025-05-07 10:54:18.262 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: 681a6477fb84eb57176e7080
2025-05-07 10:54:18.365 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: CUST1
2025-05-07 10:54:49.348 [32mINFO [m [[1;34mhttp-nio-8080-exec-3[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving customer profile with ID: CUST1
2025-05-07 10:54:49.374 [32mINFO [m [[1;34mhttp-nio-8080-exec-3[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: CUST1
2025-05-07 10:55:01.123 [32mINFO [m [[1;34mhttp-nio-8080-exec-4[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving customer profile with ID: CUST1
2025-05-07 10:55:01.133 [32mINFO [m [[1;34mhttp-nio-8080-exec-4[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Updating customer profile with ID: CUST1
2025-05-07 10:55:04.620 [32mINFO [m [[1;34mhttp-nio-8080-exec-5[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving all customer profiles
2025-05-07 10:55:04.626 [32mINFO [m [[1;34mhttp-nio-8080-exec-5[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: 681a6477fb84eb57176e7080
2025-05-07 10:55:04.637 [32mINFO [m [[1;34mhttp-nio-8080-exec-5[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: CUST1
2025-05-07 10:55:42.694 [32mINFO [m [[1;34mhttp-nio-8080-exec-6[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving account with ID: 5
2025-05-07 10:55:45.712 [32mINFO [m [[1;34mhttp-nio-8080-exec-7[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving all accounts
2025-05-07 10:55:56.779 [32mINFO [m [[1;34mhttp-nio-8080-exec-8[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving customer profile with ID: CUST2
2025-05-07 10:55:56.791 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-8[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Customer profile with ID CUST2 not found
2025-05-07 10:56:01.347 [32mINFO [m [[1;34mhttp-nio-8080-exec-9[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving customer profile with ID: CUST1
2025-05-07 10:56:01.352 [32mINFO [m [[1;34mhttp-nio-8080-exec-9[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: CUST1
2025-05-07 10:56:05.553 [32mINFO [m [[1;34mhttp-nio-8080-exec-10[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving account with account number: ACC101
2025-05-07 11:04:06.563 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.CustomerProfileServiceImpl[m: Retrieving customer profile with ID: CUST1
2025-05-07 11:04:06.583 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving accounts for customer profile ID: CUST1
2025-05-07 11:10:16.086 [32mINFO [m [[1;34mhttp-nio-8080-exec-6[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving account with ID: 1
2025-05-07 11:10:16.113 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-6[m] [1;33mc.l.c.s.AccountServiceImpl[m: Account with ID 1 not found
2025-05-07 11:10:16.119 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-6[m] [1;33mc.l.c.e.GlobalExceptionHandler[m: Handling AccountNotFoundException: Account not found with id: 1 for request path: uri=/api/accounts/id/1
2025-05-07 11:12:56.094 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Commencing graceful shutdown. Waiting for active requests to complete
2025-05-07 11:12:56.100 [32mINFO [m [[1;34mtomcat-shutdown[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Graceful shutdown complete
2025-05-07 11:12:58.221 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 11:12:58.226 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 11:12:58.237 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 11:12:58.238 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 11:13:01.694 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 17414 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 11:13:01.695 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 11:13:01.695 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 11:13:01.715 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 11:13:02.257 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 11:13:02.932 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:02.932 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 11:13:02.993 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 11:13:02.994 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 11:13:02.999 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2025-05-07 11:13:03.000 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.000 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 11:13:03.002 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:13:03.002 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:13:03.002 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:13:03.003 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 11:13:03.136 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.137 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 11:13:03.144 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:13:03.144 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:13:03.144 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:13:03.145 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 11:13:03.147 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.147 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 11:13:03.149 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:13:03.149 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:13:03.149 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:13:03.152 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 11:13:03.169 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.170 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 11:13:03.172 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:13:03.172 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:13:03.172 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:13:03.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:13:03.173 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 11:13:03.174 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.174 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 11:13:03.176 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:13:03.176 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:13:03.176 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:13:03.176 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:13:03.176 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 11:13:03.187 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.187 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 11:13:03.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:13:03.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:13:03.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:13:03.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:13:03.189 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 JDBC repository interfaces.
2025-05-07 11:13:03.207 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:13:03.208 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 11:13:03.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:13:03.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:13:03.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:13:03.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:13:03.213 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 11:13:03.462 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 11:13:03.468 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 11:13:03.469 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 11:13:03.469 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 11:13:03.488 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 11:13:03.489 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 803 ms
2025-05-07 11:13:03.712 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 11:13:03.728 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 11:13:03.803 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c92f094
2025-05-07 11:13:03.803 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 11:13:04.035 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 11:13:04.314 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 11:13:04.497 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2afd8972, com.mongodb.Jep395RecordCodecProvider@33fefbbe, com.mongodb.KotlinCodecProvider@5784f6b9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 11:13:04.505 [32mINFO [m [[1;34mcluster-ClusterId{value='681ba2b084047403d979e0be', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=10264834, minRoundTripTimeNanos=0}
2025-05-07 11:13:04.724 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 11:13:04.873 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 11:13:04.911 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 11:13:05.202 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 11:13:05.383 [33mWARN [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.l.h.OptionalLocalDcHelper[m: [s0|default] You specified datacenter1 as the local DC, but some contact points are from a different DC: Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=1b7c7e2a)=null; please provide the correct local DC, or check your contact points
2025-05-07 11:13:05.532 [33mWARN [m [[1;34mmain[m] [1;33mo.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration[m: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-07 11:13:06.015 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting ProtocolHandler ["http-nio-8080"]
2025-05-07 11:13:06.020 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat started on port 8080 (http) with context path '/'
2025-05-07 11:13:06.026 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Started SpringDataJpaApplication in 4.496 seconds (process running for 5.313)
2025-05-07 11:13:11.723 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 11:13:11.727 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Initializing Servlet 'dispatcherServlet'
2025-05-07 11:13:11.733 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Completed initialization in 6 ms
2025-05-07 11:13:11.756 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving account with ID: 1
2025-05-07 11:13:11.803 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Account with ID 1 not found
2025-05-07 11:13:11.806 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.a.j.l.DirectJDKLog[m: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')] with root cause
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
	at com.learning.connector.aop.AccountExceptionLoggingAspect.logAccountNotFoundException(AccountExceptionLoggingAspect.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:625)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.learning.connector.service.AccountServiceImpl$$SpringCGLIB$$0.getAccountById(<generated>)
	at com.learning.connector.controller.AccountController.getAccountById(AccountController.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-05-07 11:14:23.691 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Commencing graceful shutdown. Waiting for active requests to complete
2025-05-07 11:14:23.693 [32mINFO [m [[1;34mtomcat-shutdown[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Graceful shutdown complete
2025-05-07 11:14:25.826 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 11:14:25.838 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' removed from EhcacheManager.
2025-05-07 11:14:25.844 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown initiated...
2025-05-07 11:14:25.847 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Shutdown completed.
2025-05-07 11:14:29.851 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Starting SpringDataJpaApplication using Java 20.0.2 with PID 18352 (/Users/vickyaa/Downloads/learning0418-master/target/classes started by vickyaa in /Users/vickyaa/Downloads/learning0418-master)
2025-05-07 11:14:29.853 [36mDEBUG[m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Running with Spring Boot v3.4.4, Spring v6.2.5
2025-05-07 11:14:29.854 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.SpringApplication[m: No active profile set, falling back to 1 default profile: "default"
2025-05-07 11:14:29.873 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: Using Docker Compose file /Users/vickyaa/Downloads/learning0418-master/compose.yaml
2025-05-07 11:14:30.596 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.d.c.l.DockerComposeLifecycleManager[m: There are already Docker Compose services running, skipping startup
2025-05-07 11:14:31.310 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.310 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 11:14:31.367 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 11:14:31.368 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-07 11:14:31.374 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2025-05-07 11:14:31.374 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.375 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-07 11:14:31.376 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:14:31.376 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:14:31.377 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-05-07 11:14:31.378 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2025-05-07 11:14:31.523 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.524 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Cassandra repositories in DEFAULT mode.
2025-05-07 11:14:31.532 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:14:31.532 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:14:31.532 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.ReactiveCassandraRepository
2025-05-07 11:14:31.533 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Cassandra repository interfaces.
2025-05-07 11:14:31.535 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.535 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Cassandra repositories in DEFAULT mode.
2025-05-07 11:14:31.537 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:14:31.537 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:14:31.538 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Cassandra - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Cassandra repository, consider annotating your entities with one of these annotations: org.springframework.data.cassandra.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.cassandra.repository.CassandraRepository
2025-05-07 11:14:31.540 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 4 ms. Found 1 Cassandra repository interface.
2025-05-07 11:14:31.558 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.558 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-05-07 11:14:31.561 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:14:31.561 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:14:31.561 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:14:31.561 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-05-07 11:14:31.561 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Elasticsearch repository interfaces.
2025-05-07 11:14:31.563 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.563 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-05-07 11:14:31.565 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:14:31.565 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:14:31.565 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:14:31.565 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-05-07 11:14:31.565 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 1 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-05-07 11:14:31.576 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.576 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-07 11:14:31.578 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:14:31.579 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:14:31.579 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:14:31.579 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-07 11:14:31.579 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 JDBC repository interfaces.
2025-05-07 11:14:31.597 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 11:14:31.597 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 11:14:31.603 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:14:31.603 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.CustomerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:14:31.603 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:14:31.603 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationExtensionSupport[m: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.learning.connector.repository.TransactionLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-05-07 11:14:31.603 [32mINFO [m [[1;34mmain[m] [1;33mo.s.d.r.c.RepositoryConfigurationDelegate[m: Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 11:14:31.852 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat initialized with port 8080 (http)
2025-05-07 11:14:31.858 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing ProtocolHandler ["http-nio-8080"]
2025-05-07 11:14:31.858 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting service [Tomcat]
2025-05-07 11:14:31.859 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-07 11:14:31.877 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring embedded WebApplicationContext
2025-05-07 11:14:31.877 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.s.c.ServletWebServerApplicationContext[m: Root WebApplicationContext: initialization completed in 844 ms
2025-05-07 11:14:32.098 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.p.SpringPersistenceUnitInfo[m: No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 11:14:32.114 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Starting...
2025-05-07 11:14:32.207 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.p.HikariPool[m: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cdad619
2025-05-07 11:14:32.208 [32mINFO [m [[1;34mmain[m] [1;33mc.z.h.HikariDataSource[m: HikariPool-1 - Start completed.
2025-05-07 11:14:32.436 [32mINFO [m [[1;34mmain[m] [1;33mo.e.c.EhcacheManager[m: Cache 'com.learning.connector.model.TransactionLog' created in EhcacheManager.
2025-05-07 11:14:32.718 [32mINFO [m [[1;34mmain[m] [1;33mo.s.o.j.AbstractEntityManagerFactoryBean[m: Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 11:14:32.907 [32mINFO [m [[1;34mmain[m] [1;33mc.m.i.d.l.SLF4JLogger[m: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.4.1"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@28878a52, com.mongodb.Jep395RecordCodecProvider@56554e7, com.mongodb.KotlinCodecProvider@2f19ab6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-07 11:14:32.920 [32mINFO [m [[1;34mcluster-ClusterId{value='681ba3080ad492133c1aeffb', description='null'}-127.0.0.1:27017[m] [1;33mc.m.i.d.l.SLF4JLogger[m: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14632375, minRoundTripTimeNanos=0}
2025-05-07 11:14:33.152 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.DefaultMavenCoordinates[m: Apache Cassandra Java Driver (org.apache.cassandra:java-driver-core) version 4.18.1
2025-05-07 11:14:33.295 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.ContactPoints[m: Contact point localhost:9042 resolves to multiple addresses, will use them all ([localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1])
2025-05-07 11:14:33.334 [32mINFO [m [[1;34mmain[m] [1;33mc.d.o.d.i.c.c.CqlPrepareAsyncProcessor[m: Adding handler to invalidate cached prepared statements on type changes
2025-05-07 11:14:33.617 [32mINFO [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.t.Clock[m: Using native clock for microsecond precision
2025-05-07 11:14:33.799 [33mWARN [m [[1;34ms0-admin-0[m] [1;33mc.d.o.d.i.c.l.h.OptionalLocalDcHelper[m: [s0|default] You specified datacenter1 as the local DC, but some contact points are from a different DC: Node(endPoint=localhost/127.0.0.1:9042, hostId=null, hashCode=43c480dd)=null; please provide the correct local DC, or check your contact points
2025-05-07 11:14:33.936 [33mWARN [m [[1;34mmain[m] [1;33mo.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration[m: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-07 11:14:34.380 [32mINFO [m [[1;34mmain[m] [1;33mo.a.j.l.DirectJDKLog[m: Starting ProtocolHandler ["http-nio-8080"]
2025-05-07 11:14:34.384 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.w.e.t.TomcatWebServer[m: Tomcat started on port 8080 (http) with context path '/'
2025-05-07 11:14:34.390 [32mINFO [m [[1;34mmain[m] [1;33mo.s.b.StartupInfoLogger[m: Started SpringDataJpaApplication in 4.821 seconds (process running for 5.709)
2025-05-07 11:14:38.026 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.a.j.l.DirectJDKLog[m: Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 11:14:38.027 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Initializing Servlet 'dispatcherServlet'
2025-05-07 11:14:38.030 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mo.s.w.s.FrameworkServlet[m: Completed initialization in 3 ms
2025-05-07 11:14:38.057 [32mINFO [m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Retrieving account with ID: 1
2025-05-07 11:14:38.103 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.s.AccountServiceImpl[m: Account with ID 1 not found
2025-05-07 11:14:38.105 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.a.AccountExceptionLoggingAspect[m: Account lookup failed: Account with Id '1' was not found. Error message: Account not found with id: 1
2025-05-07 11:14:38.106 [1;31mERROR[m [[1;34mhttp-nio-8080-exec-2[m] [1;33mc.l.c.e.GlobalExceptionHandler[m: Handling AccountNotFoundException: Account not found with id: 1 for request path: uri=/api/accounts/id/1
2025-05-07 11:16:13.529 [32mINFO [m [[1;34mSpringApplicationShutdownHook[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Commencing graceful shutdown. Waiting for active requests to complete
2025-05-07 11:16:13.534 [32mINFO [m [[1;34mtomcat-shutdown[m] [1;33mo.s.b.w.e.t.GracefulShutdown[m: Graceful shutdown complete
